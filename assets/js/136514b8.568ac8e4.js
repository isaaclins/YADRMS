"use strict";(self.webpackChunkYADRMS_documentation=self.webpackChunkYADRMS_documentation||[]).push([[433],{2476:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"repositorydocumentation/how-to-code","title":"How To Code","description":"Step-by-step instructions on how to code. Proudly made by Isaac","source":"@site/docs/repositorydocumentation/How-to-Code.md","sourceDirName":"repositorydocumentation","slug":"/repositorydocumentation/how-to-code","permalink":"/YADRMS/docs/repositorydocumentation/how-to-code","draft":false,"unlisted":false,"editUrl":"https://github.com/isaaclins/YADRMS/tree/main/docs/repositorydocumentation/How-to-Code.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"how-to-code","title":"How To Code","description":"Step-by-step instructions on how to code. Proudly made by Isaac","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Repository Documentation","permalink":"/YADRMS/docs/repositorydocumentation/"},"next":{"title":"Getting Started","permalink":"/YADRMS/docs/category/getting-started-1"}}');var o=i(4848),r=i(8453);const s={id:"how-to-code",title:"How To Code",description:"Step-by-step instructions on how to code. Proudly made by Isaac",sidebar_position:1},c="Tutorial on how to Code by Isaac",d={},a=[{value:"<strong>Original Code (Bad Example)</strong>",id:"original-code-bad-example",level:3},{value:"<strong>Step 1: Use Clear and Descriptive Naming</strong>",id:"step-1-use-clear-and-descriptive-naming",level:3},{value:"<strong>Step 2: Avoid Deep Nesting</strong>",id:"step-2-avoid-deep-nesting",level:3},{value:"<strong>Step 3: Extract Shared Logic to Avoid Duplication</strong>",id:"step-3-extract-shared-logic-to-avoid-duplication",level:3},{value:"<strong>Final Version (Clean Code)</strong>",id:"final-version-clean-code",level:3}];function l(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"tutorial-on-how-to-code-by-isaac",children:"Tutorial on how to Code by Isaac"})}),"\n",(0,o.jsx)(n.h3,{id:"original-code-bad-example",children:(0,o.jsx)(n.strong,{children:"Original Code (Bad Example)"})}),"\n",(0,o.jsx)(n.p,{children:"This code is deeply nested, has duplicate logic, and uses unclear variable names."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def proc(u):\n    if u:\n        if u.act:\n            if u.p > 100:\n                d = u.p * 0.9\n                print(f"Total: {d}")\n            else:\n                print(f"Total: {u.p}")\n'})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.em,{children:["Let me guess, you understood ",(0,o.jsx)(n.strong,{children:"jackshit"}),"."]})}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"step-1-use-clear-and-descriptive-naming",children:(0,o.jsx)(n.strong,{children:"Step 1: Use Clear and Descriptive Naming"})}),"\n",(0,o.jsxs)(n.p,{children:["We begin by renaming functions and variables so their purpose is immediately clear. For example, we change ",(0,o.jsx)(n.code,{children:"proc"})," to ",(0,o.jsx)(n.code,{children:"process_user"}),", ",(0,o.jsx)(n.code,{children:"u"})," to ",(0,o.jsx)(n.code,{children:"user"}),", ",(0,o.jsx)(n.code,{children:"u.act"})," to ",(0,o.jsx)(n.code,{children:"user.is_active"}),", and ",(0,o.jsx)(n.code,{children:"u.p"})," to ",(0,o.jsx)(n.code,{children:"user.price"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def process_user(user):\n    if user and user.is_active:\n        if user.price > 100:\n            discounted_price = user.price * 0.9\n            print(f"Total: {discounted_price}")\n        else:\n            print(f"Total: {user.price}")\n'})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Wow! We can actually make sense of the code!"})}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"step-2-avoid-deep-nesting",children:(0,o.jsx)(n.strong,{children:"Step 2: Avoid Deep Nesting"})}),"\n",(0,o.jsxs)(n.p,{children:["Next, we simplify the structure by using ",(0,o.jsx)(n.strong,{children:"early returns"}),". This avoids deeply nested conditionals, making the code more readable and easier to follow."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def process_user(user):\n    if not user or not user.is_active:\n        return  # Exit early if the user is invalid or inactive\n\n    if user.price > 100:\n        discounted_price = user.price * 0.9\n    else:\n        discounted_price = user.price\n\n    print(f"Total: {discounted_price}")\n'})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"This makes it more readable. It ensures the person reading your code does not get overwhelmed by all the conditions."})}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"step-3-extract-shared-logic-to-avoid-duplication",children:(0,o.jsx)(n.strong,{children:"Step 3: Extract Shared Logic to Avoid Duplication"})}),"\n",(0,o.jsx)(n.p,{children:"Finally, we extract the discount calculation into its own function. This keeps the logic DRY (Don't Repeat Yourself) and allows for easy reuse."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def apply_discount(price):\n    """Apply a 10% discount if the price is over 100."""\n    return price * 0.9 if price > 100 else price\n\ndef process_user(user):\n    if not user or not user.is_active:\n        return  # Exit early if the user is invalid or inactive\n\n    total_price = apply_discount(user.price)\n    print(f"Total: {total_price}")\n'})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"This eliminates duplication and makes it dynamic in the future. If the code has to be reused, it will be simpler, faster, and more efficient."})}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"final-version-clean-code",children:(0,o.jsx)(n.strong,{children:"Final Version (Clean Code)"})}),"\n",(0,o.jsxs)(n.p,{children:["\u2705 ",(0,o.jsx)(n.strong,{children:"Uses clear, meaningful names"}),(0,o.jsx)(n.br,{}),"\n","\u2705 ",(0,o.jsx)(n.strong,{children:"Avoids deep nesting with early returns"}),(0,o.jsx)(n.br,{}),"\n","\u2705 ",(0,o.jsx)(n.strong,{children:"Extracts shared logic to eliminate duplication"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def apply_discount(price):\n    """Apply a 10% discount if the price is over 100."""\n    return price * 0.9 if price > 100 else price\n\ndef process_user(user):\n    if not user or not user.is_active:\n        return  # Exit early if the user is invalid or inactive\n\n    total_price = apply_discount(user.price)\n    print(f"Total: {total_price}")\n'})}),"\n",(0,o.jsxs)(n.p,{children:["This refactored code is now ",(0,o.jsx)(n.strong,{children:"easier to read, maintain, and reuse"}),"! \ud83d\ude80"]}),"\n",(0,o.jsx)(n.p,{children:"For further clarification, look at this:"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://www.youtube.com/watch?v=CFRhGnuXG-4",children:"How to Never Nest"})," by ",(0,o.jsx)(n.a,{href:"https://www.youtube.com/@CodeAesthetic",children:"CodeAesthetic"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://www.youtube.com/watch?v=-J3wNP6u5YU",children:"How to Define Variables"})," by ",(0,o.jsx)(n.a,{href:"https://www.youtube.com/@CodeAesthetic",children:"CodeAesthetic"})]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var t=i(6540);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);