"use strict";(self.webpackChunkYADRMS_documentation=self.webpackChunkYADRMS_documentation||[]).push([[949],{7557:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"repositorydocumentation/getting-started/configuration","title":"Configuration","description":"How to configure YADRMS after installation.","source":"@site/docs/repositorydocumentation/getting-started/configuration.md","sourceDirName":"repositorydocumentation/getting-started","slug":"/repositorydocumentation/getting-started/configuration","permalink":"/YADRMS/docs/repositorydocumentation/getting-started/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/isaaclins/YADRMS/tree/main/docs/repositorydocumentation/getting-started/configuration.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"configuration","title":"Configuration","description":"How to configure YADRMS after installation.","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Installation Guide","permalink":"/YADRMS/docs/repositorydocumentation/getting-started/installation"},"next":{"title":"API","permalink":"/YADRMS/docs/category/api"}}');var o=t(4848),r=t(8453);const s={id:"configuration",title:"Configuration",description:"How to configure YADRMS after installation.",sidebar_position:2},a="Configuration",l={},c=[{value:"Environment Variables",id:"environment-variables",level:2},{value:"Configuration Files",id:"configuration-files",level:2},{value:"Example Configuration",id:"example-configuration",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,o.jsx)(e.p,{children:"After installation, you\u2019ll need to configure the system:"}),"\n",(0,o.jsx)(e.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,o.jsx)(e.p,{children:"Set up the following environment variables:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"DISCORD_BOT_TOKEN:"})," Your Discord bot token."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"API_ENDPOINT:"})," URL for the backend API."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"LOG_LEVEL:"})," Set the logging level (e.g., DEBUG, INFO)."]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"configuration-files",children:"Configuration Files"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"backend/config.yml:"})," Contains settings for the Python backend."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.strong,{children:"frontend/.env:"})," Contains frontend configuration such as API endpoints."]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"example-configuration",children:"Example Configuration"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",children:'# backend/config.yml\ndiscord:\n  token: "YOUR_DISCORD_BOT_TOKEN"\napi:\n  endpoint: "http://localhost:8000/api"\nlogging:\n  level: "DEBUG"\n'})}),"\n",(0,o.jsx)(e.p,{children:"Make sure to restart both backend and frontend services after updating configuration files."})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>a});var i=t(6540);const o={},r=i.createContext(o);function s(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);